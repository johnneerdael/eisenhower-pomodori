import{createClient as l}from"https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function e(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=e(i);fetch(i.href,a)}})();const c="https://mzxeyosjcunoucmjgvln.supabase.co",h="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im16eGV5b3NqY3Vub3VjbWpndmxuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIzOTgyODIsImV4cCI6MjA2Nzk3NDI4Mn0.kXdS6Pvxt6Q62G5IOo_NZhc2jinTM7swfc7MfBxsJvE",o=l(c,h);async function u(){const{data:{session:d}}=await o.auth.getSession();if(d!=null&&d.user)return d.user;const t=prompt("Enter e‚Äëmail to sync FocusMatrix across devices (magic‚Äëlink will be sent):");if(!t)return null;const{error:e}=await o.auth.signInWithOtp({email:t});return e?(alert("Sign‚Äëin failed: "+e.message),null):(alert("Check your inbox, click the link, then reload."),null)}class m{constructor(){this.tasks=[],this.settings={theme:"auto",fontSize:16,animationSpeed:"normal",soundEnabled:!1,achievementsEnabled:!0,focusDuration:25,shortBreakDuration:5,longBreakDuration:30,sessionsPerCycle:4,goals:[]},this.stats={tasksAddedToday:0,tasksCompletedToday:0,tasksEliminatedToday:0,focusSessionsToday:0,dailyStreak:0,focusStreak:0,totalEliminated:0,lastUsedDate:null,achievements:{firstStep:!1,focusStarter:!1,goodJudgment:!1}},this.user=null,this.draggedTask=null,this.focusMode=!1,this.progressMode=!1,this.timerRunning=!1,this.focusTimer=null,this.timeRemaining=this.settings.focusDuration*60,this.timerMode="focus",this.currentCycle=1,this.touchStartX=0,this.touchStartY=0,this.touchStartTime=0,this.swipeThreshold=60,this.tapThreshold=250,this.init()}async init(){this.user=await u(),await this.loadSettings(),await this.loadStats(),await this.loadTasks(),this.applySettings(),this.bindEvents(),this.renderAllTasks(),this.updateGoalSelect(),this.updateDashboard(),this.checkDailyReset(),this.requestNotificationPermission()}get isOnline(){return navigator.onLine&&!!this.user}async loadTasks(){if(this.isOnline){const{data:t}=await o.from("tasks").select("*").eq("user_id",this.user.id).order("created_at");this.tasks=t||[]}else this.tasks=JSON.parse(localStorage.getItem("focusmatrix_ultimate_tasks")||"[]")}async saveTasks(){if(this.isOnline){const t=this.tasks.map(e=>({...e,user_id:this.user.id}));await o.from("tasks").upsert(t,{onConflict:"id"})}localStorage.setItem("focusmatrix_ultimate_tasks",JSON.stringify(this.tasks))}async loadSettings(){var e;const t=this.settings;if(this.isOnline){const{data:s}=await o.from("settings").select("data").eq("user_id",(e=this.user)==null?void 0:e.id).single(),i=(s==null?void 0:s.data)||{},a=JSON.parse(localStorage.getItem("focusmatrix_ultimate_settings")||"{}");this.settings={...t,...i,...a}}else this.settings={...t,...JSON.parse(localStorage.getItem("focusmatrix_ultimate_settings")||"{}")}}async saveSettings(){this.isOnline&&await o.from("settings").upsert({user_id:this.user.id,data:this.settings}),localStorage.setItem("focusmatrix_ultimate_settings",JSON.stringify(this.settings)),this.updateGoalSelect()}async loadStats(){const t=new Date().toDateString();if(this.isOnline){const{data:e}=await o.from("daily_stats").select("*").eq("user_id",this.user.id).eq("day",t).single();this.stats=e||{...this.stats,day:t}}else this.stats=JSON.parse(localStorage.getItem("focusmatrix_ultimate_stats")||"{}")||{...this.stats},this.stats.day!==t&&(this.stats={...this.stats,day:t})}async saveStats(){this.isOnline&&await o.from("daily_stats").upsert({...this.stats,user_id:this.user.id}),localStorage.setItem("focusmatrix_ultimate_stats",JSON.stringify(this.stats))}bindEvents(){document.getElementById("addTaskBtn").addEventListener("click",()=>this.handleAddTask()),document.getElementById("taskInput").addEventListener("keypress",t=>{t.key==="Enter"&&this.handleAddTask()}),document.getElementById("progressToggle").addEventListener("click",()=>this.toggleProgressDashboard()),document.getElementById("focusToggle").addEventListener("click",()=>this.toggleFocusMode()),document.getElementById("exportBtn").addEventListener("click",()=>this.quickExport()),document.getElementById("settingsBtn").addEventListener("click",()=>this.openSettings()),this.bindTimerEvents(),this.bindSettingsEvents(),this.bindDataManagementEvents(),document.querySelectorAll(".task-list").forEach(t=>{t.addEventListener("dragover",e=>this.handleDragOver(e)),t.addEventListener("drop",e=>this.handleDrop(e)),t.addEventListener("dragenter",e=>this.handleDragEnter(e)),t.addEventListener("dragleave",e=>this.handleDragLeave(e))}),document.addEventListener("keydown",t=>this.handleKeyboard(t))}bindSettingsEvents(){["settingsOverlay","closeSettings","cancelSettings"].forEach(t=>document.getElementById(t).addEventListener("click",()=>this.closeSettings())),document.getElementById("saveSettings").addEventListener("click",()=>this.saveSettingsFromModal()),document.getElementById("resetSettings").addEventListener("click",()=>this.resetSettings()),document.getElementById("fontSizeSlider").addEventListener("input",t=>document.getElementById("fontSizeValue").textContent=t.target.value+"px")}updateGoalSelect(){const t=document.getElementById("goalSelect");if(!t)return;t.innerHTML="";const e=document.createElement("option");e.value="",e.textContent="No goal",t.appendChild(e),this.settings.goals.forEach(s=>{const i=document.createElement("option");i.value=s,i.textContent=s,t.appendChild(i)}),t.style.display=this.settings.goals.length?"block":"none"}async handleAddTask(){var a;const t=document.getElementById("taskInput"),e=t.value.trim();if(!e){this.showFeedback("Please enter a task","error");return}const s=((a=document.getElementById("goalSelect"))==null?void 0:a.value)||null,i={id:`task_${Date.now()}`,text:this.sanitizeText(e),quadrant:1,goal:s,created_at:new Date().toISOString()};this.tasks.push(i),await this.saveTasks(),this.stats.tasksAddedToday++,await this.saveStats(),this.renderTask(i),this.updateDashboard(),t.value="",t.focus()}renderTask(t){const e=document.createElement("div");e.className="task-item",e.draggable=!0,e.dataset.taskId=t.id;const s=t.goal?`<span class="goal-badge" title="${this.escapeHtml(t.goal)}">üéØ ${this.escapeHtml(t.goal)}</span>`:"";e.innerHTML=`
      <div class="task-text">${this.escapeHtml(t.text)} ${s}</div>
      <div class="task-actions">
        <button class="task-action-btn delete-btn" aria-label="Delete">üóëÔ∏è</button>
      </div>
    `,e.addEventListener("dragstart",i=>{this.draggedTask=t,i.currentTarget.classList.add("dragging")}),e.addEventListener("dragend",i=>i.currentTarget.classList.remove("dragging")),e.addEventListener("dblclick",()=>this.editTask(t)),e.querySelector(".delete-btn").addEventListener("click",i=>{i.stopPropagation(),this.deleteTask(t.id)}),e.addEventListener("touchstart",i=>this.handleTouchStart(i)),e.addEventListener("touchmove",i=>this.handleTouchMove(i,e)),e.addEventListener("touchend",i=>this.handleTouchEnd(i,t,e)),document.getElementById(`q${t.quadrant}-tasks`).appendChild(e),this.updateEmptyStates()}populateSettingsModal(){document.getElementById("themeSelect").value=this.settings.theme,document.getElementById("fontSizeSlider").value=this.settings.fontSize,document.getElementById("fontSizeValue").textContent=this.settings.fontSize+"px",document.getElementById("animationSpeed").value=this.settings.animationSpeed,document.getElementById("focusDuration").value=this.settings.focusDuration,document.getElementById("shortBreakDuration").value=this.settings.shortBreakDuration,document.getElementById("longBreakDuration").value=this.settings.longBreakDuration,document.getElementById("sessionsPerCycle").value=this.settings.sessionsPerCycle,document.getElementById("soundEnabled").checked=this.settings.soundEnabled,document.getElementById("achievementsEnabled").checked=this.settings.achievementsEnabled,["goal1","goal2","goal3"].forEach((t,e)=>{document.getElementById(t).value=this.settings.goals[e]||""})}async saveSettingsFromModal(){this.settings.theme=document.getElementById("themeSelect").value,this.settings.fontSize=parseInt(document.getElementById("fontSizeSlider").value,10),this.settings.animationSpeed=document.getElementById("animationSpeed").value,this.settings.focusDuration=parseInt(document.getElementById("focusDuration").value,10),this.settings.shortBreakDuration=parseInt(document.getElementById("shortBreakDuration").value,10),this.settings.longBreakDuration=parseInt(document.getElementById("longBreakDuration").value,10),this.settings.sessionsPerCycle=parseInt(document.getElementById("sessionsPerCycle").value,10),this.settings.soundEnabled=document.getElementById("soundEnabled").checked,this.settings.achievementsEnabled=document.getElementById("achievementsEnabled").checked,this.settings.goals=[...new Set(["goal1","goal2","goal3"].map(t=>document.getElementById(t).value.trim()).filter(Boolean))].slice(0,3),await this.saveSettings(),this.applySettings(),this.closeSettings(),this.showFeedback("Settings saved!","success")}handleDragOver(t){t.preventDefault()}handleDragEnter(t){var e;(e=t.target.closest(".task-list"))==null||e.classList.add("drag-over")}handleDragLeave(t){var e;(e=t.target.closest(".task-list"))==null||e.classList.remove("drag-over")}async handleDrop(t){t.preventDefault();const e=t.target.closest(".task-list");if(!e||!this.draggedTask)return;const s=parseInt(e.closest(".quadrant").dataset.quadrant);this.draggedTask.quadrant!==s&&(this.draggedTask.quadrant=s,await this.saveTasks(),this.renderAllTasks(),s===4&&this.handleQuadrant4(this.draggedTask))}handleTouchStart(t){this.touchStartX=t.touches[0].clientX,this.touchStartY=t.touches[0].clientY,this.touchStartTime=Date.now()}handleTouchMove(t,e){const s=t.touches[0].clientX-this.touchStartX;Math.abs(s)<10||(e.style.transform=`translateX(${s}px)`,s<-this.swipeThreshold?e.classList.add("swipe-left"):e.classList.remove("swipe-left"))}handleTouchEnd(t,e,s){const i=t.changedTouches[0].clientX-this.touchStartX,a=t.changedTouches[0].clientY-this.touchStartY,n=Date.now()-this.touchStartTime;if(s.style.transform="",s.classList.remove("swipe-left"),n<this.tapThreshold&&Math.abs(i)<10&&Math.abs(a)<10){this.editTask(e);return}i<-this.swipeThreshold&&this.deleteTask(e.id,!0)}updateEmptyStates(){document.querySelectorAll(".quadrant").forEach(t=>{const e=t.querySelector(".task-list");let s=t.querySelector(".empty-state");e.children.length?s==null||s.remove():s||(s=document.createElement("div"),s.className="empty-state",s.textContent="Drag tasks here",e.appendChild(s))})}renderAllTasks(){document.querySelectorAll(".task-list").forEach(t=>t.innerHTML=""),this.tasks.forEach(t=>this.renderTask(t)),this.updateEmptyStates()}bindTimerEvents(){document.getElementById("startTimer").addEventListener("click",()=>this.startTimer()),document.getElementById("pauseTimer").addEventListener("click",()=>this.pauseTimer()),document.getElementById("resetTimer").addEventListener("click",()=>this.resetTimer()),document.getElementById("exitFocus").addEventListener("click",()=>this.toggleFocusMode()),document.getElementById("phaseFocus").addEventListener("click",()=>this.setTimerMode("focus")),document.getElementById("phaseShortBreak").addEventListener("click",()=>this.setTimerMode("shortBreak")),document.getElementById("phaseLongBreak").addEventListener("click",()=>this.setTimerMode("longBreak"))}startTimer(){this.timerRunning||(this.timerRunning=!0,document.getElementById("startTimer").style.display="none",document.getElementById("pauseTimer").style.display="inline-block",this.focusTimer=setInterval(()=>{this.timerRunning&&(this.timeRemaining=Math.max(0,this.timeRemaining-1),this.updateTimerDisplay(),this.timeRemaining===0&&this.timerComplete())},1e3))}pauseTimer(){this.timerRunning&&(clearInterval(this.focusTimer),this.timerRunning=!1,document.getElementById("startTimer").style.display="inline-block",document.getElementById("pauseTimer").style.display="none")}resetTimer(){this.pauseTimer(),this.currentCycle=1,this.setTimerMode("focus",!0)}timerComplete(){this.pauseTimer(),this.playSound("complete"),this.timerMode==="focus"?(this.stats.focusSessionsToday++,this.saveStats(),this.updateDashboard(),this.checkAchievements(),this.showFeedback("Focus session complete!","success"),this.currentCycle%this.settings.sessionsPerCycle===0?this.setTimerMode("longBreak"):this.setTimerMode("shortBreak"),this.currentCycle++):(this.showFeedback("Break finished. Time to focus!","info"),this.setTimerMode("focus")),Notification.permission==="granted"&&new Notification("FocusMatrix Timer",{body:this.timerMode==="focus"?"Time for a break!":"Break is over. Time to get back to focus!",icon:"icons/icon-192x192.png"})}updateTimerDisplay(){const t=String(Math.floor(this.timeRemaining/60)).padStart(2,"0"),e=String(this.timeRemaining%60).padStart(2,"0");document.getElementById("timerDisplay").textContent=`${t}:${e}`}setTimerMode(t,e=!1){if(!e&&this.timerRunning&&!confirm("A timer is running. Are you sure you want to switch?"))return;this.pauseTimer(),this.timerMode=t;const s=document.getElementById("timerDisplay"),i=document.getElementById("timerSessionTitle"),a=document.getElementById("timerSessionCount");switch(document.querySelectorAll(".phase-btn").forEach(n=>n.classList.remove("active")),t){case"focus":this.timeRemaining=this.settings.focusDuration*60,s.classList.remove("break-mode"),s.classList.add("focus-mode"),document.getElementById("phaseFocus").classList.add("active"),i.textContent="Time to Focus!",a.textContent=`Session ${this.currentCycle} of ${this.settings.sessionsPerCycle}`;break;case"shortBreak":this.timeRemaining=this.settings.shortBreakDuration*60,s.classList.remove("focus-mode"),s.classList.add("break-mode"),document.getElementById("phaseShortBreak").classList.add("active"),i.textContent="Short Break",a.textContent="Relax and recharge";break;case"longBreak":this.timeRemaining=this.settings.longBreakDuration*60,s.classList.remove("focus-mode"),s.classList.add("break-mode"),document.getElementById("phaseLongBreak").classList.add("active"),i.textContent="Long Break",a.textContent="Take a well-deserved rest";break}this.updateTimerDisplay()}toggleProgressDashboard(){this.progressMode=!this.progressMode,document.getElementById("progressDashboard").style.display=this.progressMode?"block":"none",document.getElementById("progressToggle").classList.toggle("active",this.progressMode),this.progressMode&&this.updateDashboard()}toggleFocusMode(){this.focusMode=!this.focusMode,document.body.classList.toggle("focus-mode",this.focusMode),document.getElementById("focusToggle").classList.toggle("active",this.focusMode);const t=document.getElementById("focusTimer");t&&(t.style.display=this.focusMode?"block":"none"),!this.focusMode&&this.timerRunning&&this.pauseTimer()}applySettings(){document.documentElement.style.setProperty("--font-size-base",this.settings.fontSize+"px");const t={none:"0s",slow:"0.5s",normal:"0.2s",fast:"0.1s"};document.documentElement.style.setProperty("--transition-speed",t[this.settings.animationSpeed]||"0.2s"),this.setTimerMode(this.timerMode,!0)}openSettings(){this.populateSettingsModal(),document.getElementById("settingsModal").classList.add("show")}closeSettings(){document.getElementById("settingsModal").classList.remove("show")}resetSettings(){confirm("Reset settings to defaults?")&&(localStorage.removeItem("focusmatrix_ultimate_settings"),window.location.reload())}updateDashboard(){document.getElementById("tasksAddedToday").textContent=this.stats.tasksAddedToday,document.getElementById("tasksCompletedToday").textContent=this.stats.tasksCompletedToday,document.getElementById("focusSessionsToday").textContent=this.stats.focusSessionsToday,document.getElementById("tasksEliminatedToday").textContent=this.stats.tasksEliminatedToday,document.getElementById("dailyStreak").textContent=`${this.stats.dailyStreak} days`,document.getElementById("focusStreak").textContent=`${this.stats.focusStreak} days`,document.getElementById("eliminationStreak").textContent=`${this.stats.totalEliminated} total`}checkDailyReset(){const t=new Date().toDateString();this.stats.lastUsedDate!==t&&(this.stats.tasksAddedToday=0,this.stats.tasksCompletedToday=0,this.stats.tasksEliminatedToday=0,this.stats.focusSessionsToday=0,this.stats.lastUsedDate=t,this.saveStats())}checkAchievements(){!this.stats.achievements.firstStep&&this.stats.totalEliminated>0&&(this.stats.achievements.firstStep=!0,this.showFeedback("Achievement unlocked: First Step!","achievement")),!this.stats.achievements.focusStarter&&this.stats.focusSessionsToday>0&&(this.stats.achievements.focusStarter=!0,this.showFeedback("Achievement unlocked: Focus Starter!","achievement")),this.saveStats()}quickExport(){this.exportAllData(!0)}exportAllData(t=!1){const e={tasks:this.tasks,stats:this.stats,settings:this.settings,ts:new Date().toISOString(),v:"cloud-goals-2.1"},s=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),i=URL.createObjectURL(s),a=document.createElement("a");a.href=i,a.download=`focusmatrix-${e.ts.split("T")[0]}.json`,document.body.appendChild(a),a.click(),a.remove(),URL.revokeObjectURL(i),t&&this.showFeedback("Data exported!","success")}handleFileImport(t){const e=t.target.files[0];if(!e)return;const s=new FileReader;s.onload=async i=>{try{const a=JSON.parse(i.target.result);if(a.tasks&&a.stats&&a.settings)this.tasks=a.tasks,this.stats=a.stats,this.settings=a.settings,await this.saveTasks(),await this.saveStats(),await this.saveSettings(),this.applySettings(),this.renderAllTasks(),this.updateDashboard(),this.showFeedback("Import complete!","success");else throw new Error}catch{this.showFeedback("Invalid import file","error")}},s.readAsText(e),t.target.value=""}bindDataManagementEvents(){document.getElementById("exportDataBtn").addEventListener("click",()=>this.exportAllData()),document.getElementById("importDataBtn").addEventListener("click",()=>document.getElementById("importDataInput").click()),document.getElementById("clearAllDataBtn").addEventListener("click",()=>this.clearAllData()),document.getElementById("importDataInput").addEventListener("change",t=>this.handleFileImport(t))}clearAllData(){confirm("Delete all local data?")&&(localStorage.clear(),location.reload())}sanitizeText(t){return t.replace(/[<>]/g,"").trim()}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}showFeedback(t,e="info"){const s=document.createElement("div");s.className=`feedback-message ${e}`,s.textContent=t,document.body.appendChild(s),setTimeout(()=>s.remove(),3e3)}handleKeyboard(t){}setupAccessibility(){}requestNotificationPermission(){"Notification"in window&&Notification.permission!=="granted"&&Notification.permission!=="denied"&&Notification.requestPermission().then(t=>{t==="granted"&&this.showFeedback("Notifications enabled!","success")})}playSound(t){this.settings.soundEnabled&&console.log(`Playing sound: ${t}`)}announceToScreenReader(){}handleQuadrant4(t){setTimeout(()=>{confirm(`Let go of "${t.text}"?`)&&this.deleteTask(t.id)},300)}async deleteTask(t,e=!1){const s=this.tasks.findIndex(r=>r.id===t);if(s===-1)return;const i=this.tasks[s],a=document.querySelector(`[data-task-id="${t}"]`),n=async()=>{this.tasks.splice(s,1),await this.saveTasks(),i.quadrant===4?(this.stats.tasksEliminatedToday++,this.stats.totalEliminated++):this.stats.tasksCompletedToday++,await this.saveStats(),this.updateDashboard(),this.checkAchievements()};a&&!e?(a.classList.add("completing"),setTimeout(()=>{a.remove(),n()},500)):(a==null||a.remove(),n())}}document.addEventListener("DOMContentLoaded",()=>{window.focusMatrix=new m});
